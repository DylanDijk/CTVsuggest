[{"path":"https://dylandijk.github.io/CTVsuggest/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 CTVsuggest authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"ctvsuggest-package","dir":"Articles","previous_headings":"","what":"CTVsuggest Package","title":"CTVsuggest Overview","text":"aim CTVsuggest give suggestions packages added CRAN Task Views. single function, CTVsuggest(), outputs suggestions.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"ctvsuggest-example","dir":"Articles","previous_headings":"CTVsuggest Package","what":"CTVsuggest Example","title":"CTVsuggest Overview","text":"First install CTVsuggest package: attach package. output top 5 suggested packages NaturalLanguageProcessing Task View.","code":"library(devtools) install_github(\"DylanDijk/CTVsuggest\") library(CTVsuggest) CTVsuggest(n = 5, taskview = \"NaturalLanguageProcessing\") #>                NaturalLanguageProcessing       Packages #> LSX                            0.9929149            LSX #> doc2vec                        0.9819230        doc2vec #> text.alignment                 0.9626282 text.alignment #> jiebaRD                        0.9530279        jiebaRD #> R.temis                        0.9166350        R.temis"},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"the-package-workflow","dir":"Articles","previous_headings":"CTVsuggest Package","what":"The Package Workflow","title":"CTVsuggest Overview","text":"Alongside CTVsuggest package CTVsuggestTrain package. CTVsuggestTrain contains functions execute training model. particular, CTVsuggestTrain::Train_model() trains multinomial logistic regression model, outcome categories available CRAN Task Views plus additional “None” category. addition, training model, Train_model() returns data.frame containing predicted classification probabilities CRAN packages CRAN Task Views. current workflow run CTVsuggestTrain::Train_model() function weekly, time storing data.frame predicted probabilities CTVsuggestTrain GitHub repo. CTVsuggest package loads data.frame output suggestions different Task Views.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"the-model","dir":"Articles","previous_headings":"CTVsuggest Package","what":"The Model","title":"CTVsuggest Overview","text":"now give high level view model trained. Look CTVsuggestTrain section CTVsuggestTrain package documentation detailed description.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"multinomial-logistic-regression","dir":"Articles","previous_headings":"CTVsuggest Package > The Model","what":"Multinomial Logistic Regression","title":"CTVsuggest Overview","text":"model aims give Task View suggestion giving set features unassigned package. packages assigned multiple Task Views, looked classifying packages single Task View. Therefore, set multi-class classification problem, compared multi-label problem. However, reasonable assign Task View every package. depart objective Task Views, give sharp focus packages needed task. reason, model also possibility assigning package Task View. Therefore, number possible labels classification problem number Task Views + 1. perform multi-class classification problem used Multinomial Logistic Regression LASSO penalty, trained using cv.glmnet package.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"features","dir":"Articles","previous_headings":"CTVsuggest Package > The Model","what":"Features","title":"CTVsuggest Overview","text":"used three different types data create features model: Text data Package Task View descriptions. \\(n\\) Features Package dependencies. \\(n + 1\\) features Packages developed Authors. \\(n + 1\\) features given number features constructed data type, \\(n\\) denotes number Task Views. now go detail constructed features data.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"text-data-from-package-and-task-view-descriptions","dir":"Articles","previous_headings":"CTVsuggest Package > The Model > Features","what":"Text data from Package and Task View descriptions","title":"CTVsuggest Overview","text":"Example: fxregime package web page Example: Econometrics Task View description extract Task View text data corresponding markdown files (Econometrics Task View Markdown file) exist within GitHub repositories. GitHub repositories can found cran-task-views GitHub account. also extract titles descriptions packages. measure similarity package text Task View text create \\(n\\) features.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"package-dependencies","dir":"Articles","previous_headings":"CTVsuggest Package > The Model > Features","what":"Package Dependencies","title":"CTVsuggest Overview","text":"package, look immediate hard dependencies packages, calculate proportion assignment packages Task Views.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"other-packages-developed-by-the-authors","dir":"Articles","previous_headings":"CTVsuggest Package > The Model > Features","what":"Other Packages developed by the Authors","title":"CTVsuggest Overview","text":"package look packages created authors package. calculate proportion packages assigned Task View.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"training-data","dir":"Articles","previous_headings":"CTVsuggest Package > The Model","what":"Training Data","title":"CTVsuggest Overview","text":"train test model used packages assigned Task View, also used set packages labelled belonging Task View. large proportion packages belonging Task View reviewed Task View maintainers, representative packages belonging “None” category.Therefore choose packages include labelled belonging “None” category, select packages high amount monthly downloads set packages split 80:20 ratio, training testing set.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"predictions","dir":"Articles","previous_headings":"CTVsuggest Package > The Model","what":"Predictions","title":"CTVsuggest Overview","text":"Using trained model, can get predictions looking predicted classification probabilities given set features package. output predicted classification probabilities packages assigned Task View meet monthly download threshold mentioned previous section.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"accuracy","dir":"Articles","previous_headings":"CTVsuggest Package > The Model","what":"Accuracy","title":"CTVsuggest Overview","text":"accuracy model can measured comparing trained model predictions testing set. particular, set predicted Task View one largest predicted probability. accuracy measured proportion correct predictions testing set. packages assigned multiple Task View, set prediction accurate prediction one assigned Task Views.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/articles/CTVsuggest-Overview.html","id":"ctvsuggesttrain","dir":"Articles","previous_headings":"CTVsuggest Package","what":"CTVsuggestTrain","title":"CTVsuggest Overview","text":"First install CTVsuggestTrain package: mentioned , training models performed CTVsuggestTrain::Train_model() function. function uses four internal functions CTVsuggestTrain package run order: get_data() get_NLP() get_create_features() get_CRAN_logs()","code":"library(devtools) install_github(\"DylanDijk/CTVsuggestTrain\")"},{"path":"https://dylandijk.github.io/CTVsuggest/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dylan Dijk. Author, maintainer.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dijk D (2022). CTVsuggest: CRAN Task View Package Recommendations. https://dylandijk.github.io/CTVsuggest/, https://github.com/dylandijk/CTVsuggest.","code":"@Manual{,   title = {CTVsuggest: CRAN Task View Package Recommendations},   author = {Dylan Dijk},   year = {2022},   note = {https://dylandijk.github.io/CTVsuggest/, https://github.com/dylandijk/CTVsuggest}, }"},{"path":"https://dylandijk.github.io/CTVsuggest/index.html","id":"ctvsuggest","dir":"","previous_headings":"","what":"CRAN Task View Package Recommendations","title":"CRAN Task View Package Recommendations","text":"aim CTVsuggest provide recommendations packages added available CRAN Task Views. CTVsuggest package single simple function: CTVsuggest(), outputs package suggestions. model training carried CTVsuggestTrain package, detail workflow view Packages Workflow Section CTVsuggest Overview Vignette.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CRAN Task View Package Recommendations","text":"can install development version CTVsuggest GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DylanDijk/CTVsuggest\")"},{"path":"https://dylandijk.github.io/CTVsuggest/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"CRAN Task View Package Recommendations","text":"CTVsuggest() function takes Task View name (taskview) n arguments. outputs data.frame containing top n recommendations chosen Task View.","code":"library(CTVsuggest)  CTVsuggest(taskview = \"NaturalLanguageProcessing\", n = 5) #>                NaturalLanguageProcessing       Packages #> LSX                            0.9929149            LSX #> doc2vec                        0.9819230        doc2vec #> text.alignment                 0.9626282 text.alignment #> jiebaRD                        0.9530279        jiebaRD #> R.temis                        0.9166350        R.temis"},{"path":"https://dylandijk.github.io/CTVsuggest/reference/CTVsuggest.html","id":null,"dir":"Reference","previous_headings":"","what":"Output CRAN Task View suggestions — CTVsuggest","title":"Output CRAN Task View suggestions — CTVsuggest","text":"CTVsuggest() function takes Task View name argument n, outputs data.frame containing top n recommendations chosen Task View.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/reference/CTVsuggest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output CRAN Task View suggestions — CTVsuggest","text":"","code":"CTVsuggest(taskview = \"Econometrics\", n = 5)"},{"path":"https://dylandijk.github.io/CTVsuggest/reference/CTVsuggest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output CRAN Task View suggestions — CTVsuggest","text":"taskview character vector one element, must one Task Views available n integer decides number suggestions show.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/reference/CTVsuggest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output CRAN Task View suggestions — CTVsuggest","text":"data.frame suggested packages classification probability.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/reference/CTVsuggest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Output CRAN Task View suggestions — CTVsuggest","text":"predicted probabilities computed model object constructed CTVsuggestTrain::Train_model() function.","code":""},{"path":"https://dylandijk.github.io/CTVsuggest/reference/CTVsuggest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output CRAN Task View suggestions — CTVsuggest","text":"","code":"# \\donttest{ CTVsuggest(taskview = \"Econometrics\", n = 5) #>           Econometrics  Packages #> JFE          0.9987989       JFE #> GVARX        0.9981072     GVARX #> iClick       0.9973662    iClick #> iForecast    0.9960128 iForecast #> lboxcox      0.9952867   lboxcox # }"}]
